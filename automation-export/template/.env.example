# Environment Variables Template
# Copy this file to .env and fill in your actual values
# DO NOT COMMIT .env TO VERSION CONTROL

# =============================================================================
# COVERAGE SETTINGS
# =============================================================================

# Coverage thresholds (percentage)
COVERAGE_GLOBAL_THRESHOLD=80
COVERAGE_PATCH_THRESHOLD=85

# Coverage file paths
COVERAGE_DIR=coverage
COVERAGE_FILE=coverage/lcov.info

# =============================================================================
# CI/CD SETTINGS
# =============================================================================

# CI environment flag (set by CI systems automatically)
CI=false

# Test execution settings
SKIP_SLOW_TESTS=false
PARALLEL_JOBS=auto

# Build settings
BUILD_DIR=build
ARTIFACTS_DIR=artifacts
CACHE_DIR=.cache

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Codecov.io token for coverage reporting
# Get this from: https://codecov.io/gh/your-org/your-repo/settings
CODECOV_TOKEN=your-codecov-token-here

# GitHub token for API access (if needed)
# Use: https://github.com/settings/personal-access-tokens
GITHUB_TOKEN=your-github-token-here

# =============================================================================
# SECURITY SCANNING
# =============================================================================

# Enable/disable security features
SECURITY_SCAN_ENABLED=true
DEPENDENCY_SCAN_ENABLED=true

# Gitleaks configuration
GITLEAKS_CONFIG=gitleaks.toml

# =============================================================================
# LANGUAGE-SPECIFIC SETTINGS
# =============================================================================

# Python settings
PYTHON_VERSION=3.10
VIRTUAL_ENV=.venv

# Node.js settings
NODE_VERSION=18
NPM_REGISTRY=https://registry.npmjs.org/

# Java settings
JAVA_VERSION=17
MAVEN_OPTS=-Xmx1024m

# Go settings
GO_VERSION=1.20
GOPROXY=https://proxy.golang.org

# Flutter settings
FLUTTER_VERSION=stable

# Rust settings
RUST_VERSION=stable

# .NET settings
DOTNET_VERSION=7.0

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Log level for scripts (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# Enable development mode features
DEV_MODE=true

# Temporary directory for build artifacts
TEMP_DIR=/tmp

# =============================================================================
# PROJECT-SPECIFIC SETTINGS
# =============================================================================

# Project name (used in reports and artifacts)
PROJECT_NAME=my-project

# Project version (semantic versioning)
PROJECT_VERSION=1.0.0

# Environment (development, staging, production)
ENVIRONMENT=development

# Feature flags (comma-separated list)
FEATURE_FLAGS=

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Enable monitoring features
MONITORING_ENABLED=false

# Health check endpoints
HEALTH_CHECK_URL=http://localhost:8080/health

# Metrics collection
METRICS_ENABLED=false
METRICS_PORT=9090

# =============================================================================
# EXAMPLE CONFIGURATIONS BY PROJECT TYPE
# =============================================================================

# For Python projects:
# PYTHON_VERSION=3.11
# VIRTUAL_ENV=.venv
# PYTHONPATH=src

# For Java/Spring projects:
# JAVA_VERSION=17
# SPRING_PROFILES_ACTIVE=development
# MAVEN_OPTS=-Xmx2g

# For Node.js projects:
# NODE_VERSION=18
# NODE_ENV=development
# NPM_CONFIG_CACHE=.npm-cache

# For Go projects:
# GO_VERSION=1.21
# CGO_ENABLED=0
# GOOS=linux

# For Flutter projects:
# FLUTTER_VERSION=stable
# FLUTTER_BUILD_MODE=debug

# =============================================================================
# SECURITY NOTES
# =============================================================================

# IMPORTANT SECURITY CONSIDERATIONS:
# 1. Never commit real secrets to version control
# 2. Use a secrets management service in production
# 3. Rotate tokens and keys regularly
# 4. Use least-privilege access for all tokens
# 5. Enable secret scanning in your repositories
# 6. Use environment-specific configuration files

# For CI/CD environments, set these as encrypted secrets:
# - CODECOV_TOKEN
# - GITHUB_TOKEN
# - Any API keys or service credentials

# Local development: Copy to .env and customize
# Production: Use your platform's secrets management
