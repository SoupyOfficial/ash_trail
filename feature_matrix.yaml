version: 0.3.0
app: AshTrail
last_updated: '2025-08-27'
principles:
- mobile_first
- offline_first
- multi_account
- clean_architecture
- single_source_of_truth
- privacy_by_default
- explicit_undo
- performance_budgets
- analytics_opt_in
- testability
platforms:
  flutter: null
  targets:
  - ios
  android_planned: true
  android_status: planned_post_mvp
  baseline_device: iPhone 16 Pro Max
  min_android_sdk: 23
  min_ios: 13
  state_mgmt: riverpod
  charts_lib: fl_chart
enums:
  status:
  - planned
  - in_progress
  - done
  - parked
  priority:
  - P0
  - P1
  - P2
  - P3
  write_policy:
  - enqueue_then_write_remote
  - write_through
  - local_only
  conflict_policy:
  - last_write_wins_per_field
  - server_timestamp_wins
  - custom_merge
epics:
- id: ui
  title: UI Architecture & Navigation
  desc: App shell, routing, adaptive layouts, and theme scaffolding.
- id: logging
  title: Logging
  desc: Capture and edit smoking events quickly with minimal friction.
- id: insights
  title: Insights
  desc: Charts and analytics across ranges and accounts.
- id: accounts
  title: Accounts
  desc: Multi-account auth, session, and switching.
- id: sync
  title: Sync
  desc: Background queue, retry, conflict handling.
- id: data
  title: Data
  desc: Schema, indexing, and perf for queries.
- id: settings
  title: Settings
  desc: App preferences, privacy, units.
- id: notifications
  title: Notifications
  desc: Reminders and system prompts.
- id: export
  title: Export & Share
  desc: CSV/JSON export and share flows.
- id: quality
  title: Quality
  desc: A11y, telemetry, error handling, perf budgets.
- id: devtools
  title: Dev & Ops
  desc: Feature flags, demo mode, logging console.
entities:
- name: Account
  pk: id
  fields:
  - name: id
    type: string
  - name: displayName
    type: string
  - name: firstName
    type: string?
  - name: lastName
    type: string?
  - name: email
    type: string?
  - name: photoUrl
    type: string?
  - name: provider
    type: enum[google,email,device]
- name: SmokeLog
  pk: id
  indexes:
  - name: byAccountTs
    fields:
    - accountId
    - ts
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: ts
    type: datetime
  - name: durationMs
    type: int
  - name: methodId
    type: fk(Method.id)?
  - name: potency
    type: int?
  - name: moodScore
    type: int
  - name: physicalScore
    type: int
  - name: notes
    type: string?
  - name: deviceLocalId
    type: string?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: SmokeLogTag
  pk: id
  indexes:
  - name: byLog
    fields:
    - smokeLogId
  - name: byTag
    fields:
    - tagId
  - name: byAccountTag
    fields:
    - accountId
    - tagId
  - name: byAccountTagTs
    fields:
    - accountId
    - tagId
    - ts
  fields:
  - name: id
    type: string
  - name: smokeLogId
    type: fk(SmokeLog.id)
  - name: tagId
    type: fk(Tag.id)
  - name: accountId
    type: fk(Account.id)
  - name: ts
    type: datetime
  - name: createdAt
    type: datetime
- name: Reason
  pk: id
  indexes:
  - name: byAccountOrder
    fields:
    - accountId
    - orderIndex
  - name: byAccountName
    fields:
    - accountId
    - name
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)?
  - name: name
    type: string
  - name: enabled
    type: bool
  - name: orderIndex
    type: int
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: SmokeLogReason
  pk: id
  indexes:
  - name: byLog
    fields:
    - smokeLogId
  - name: byReason
    fields:
    - reasonId
  - name: byAccountReason
    fields:
    - accountId
    - reasonId
  - name: byAccountReasonTs
    fields:
    - accountId
    - reasonId
    - ts
  fields:
  - name: id
    type: string
  - name: smokeLogId
    type: fk(SmokeLog.id)
  - name: reasonId
    type: fk(Reason.id)
  - name: accountId
    type: fk(Account.id)
  - name: ts
    type: datetime
  - name: createdAt
    type: datetime
- name: FilterPreset
  pk: id
  indexes:
  - name: byAccountUpdated
    fields:
    - accountId
    - updatedAt
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: name
    type: string
  - name: range
    type: enum[7d,30d,90d,1y,all,custom]
  - name: customStart
    type: date?
  - name: customEnd
    type: date?
  - name: includeTags
    type: string[]?
  - name: excludeTags
    type: string[]?
  - name: sort
    type: enum[tsAsc,tsDesc,durationAsc,durationDesc]
  - name: query
    type: string?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: Goal
  pk: id
  indexes:
  - name: byAccountActive
    fields:
    - accountId
    - active
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: type
    type: enum[countPerDay,durationPerDay,streak]
  - name: target
    type: int
  - name: window
    type: enum[day,week,month]
  - name: startDate
    type: date
  - name: endDate
    type: date?
  - name: active
    type: bool
  - name: progress
    type: int?
  - name: achievedAt
    type: datetime?
- name: Rule
  pk: id
  indexes:
  - name: byAccountEnabled
    fields:
    - accountId
    - enabled
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: name
    type: string
  - name: condition
    type: json
  - name: action
    type: enum[notify,tag,reminder]
  - name: enabled
    type: bool
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: RuleTrigger
  pk: id
  indexes:
  - name: byRuleTime
    fields:
    - ruleId
    - triggeredAt
  fields:
  - name: id
    type: string
  - name: ruleId
    type: fk(Rule.id)
  - name: triggeredAt
    type: datetime
  - name: context
    type: json
- name: ImportItem
  pk: id
  indexes:
  - name: byBatchStatus
    fields:
    - batchId
    - status
  fields:
  - name: id
    type: string
  - name: batchId
    type: fk(ImportBatch.id)
  - name: status
    type: enum[inserted,failed,skipped]
  - name: raw
    type: json
  - name: error
    type: string?
- name: PushToken
  pk: id
  indexes:
  - name: byDeviceActive
    fields:
    - deviceId
    - active
  fields:
  - name: id
    type: string
  - name: deviceId
    type: fk(Device.id)
  - name: platform
    type: enum[apns,fcm,web]
  - name: token
    type: string
  - name: active
    type: bool
  - name: createdAt
    type: datetime
  - name: revokedAt
    type: datetime?
- name: Onboarding
  pk: accountId
  fields:
  - name: accountId
    type: fk(Account.id)
  - name: stepsCompleted
    type: enum[welcome,recordedFirst,createdTag,enabledReminders,createdGoal][]
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: DbMeta
  pk: id
  fields:
  - name: id
    type: string
  - name: schemaVersion
    type: int
  - name: migratedAt
    type: datetime
- name: Prefs
  pk: accountId
  fields:
  - name: accountId
    type: fk(Account.id)
  - name: defaultRange
    type: enum[7d,30d,90d,1y,all]
  - name: unit
    type: enum[ms,s]
  - name: analyticsOptIn
    type: bool
  - name: reminderTimes
    type: time[]?
  - name: preferredTheme
    type: enum[system,light,dark]
  - name: accentColor
    type: string?
- name: Device
  pk: id
  indexes:
  - name: byPlatform
    fields:
    - platform
  fields:
  - name: id
    type: string
  - name: platform
    type: enum[android,ios,web,desktop]
  - name: appVersion
    type: string
  - name: osVersion
    type: string?
  - name: model
    type: string?
  - name: createdAt
    type: datetime
- name: AuthIdentity
  pk: id
  indexes:
  - name: byAccountProvider
    fields:
    - accountId
    - provider
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: provider
    type: enum[google,email,device]
  - name: providerUid
    type: string
  - name: email
    type: string?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: Session
  pk: id
  indexes:
  - name: byAccountStatus
    fields:
    - accountId
    - status
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: deviceId
    type: fk(Device.id)?
  - name: status
    type: enum[active,revoked,expired]
  - name: tokenHash
    type: string?
  - name: expiresAt
    type: datetime?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: SyncState
  pk: accountId
  fields:
  - name: accountId
    type: fk(Account.id)
  - name: lastPulledAt
    type: datetime?
  - name: lastPushedAt
    type: datetime?
  - name: remoteVersion
    type: string?
  - name: tombstoneWatermark
    type: string?
  - name: backoffUntil
    type: datetime?
- name: SyncOp
  pk: id
  indexes:
  - name: byAccountStatusCreated
    fields:
    - accountId
    - status
    - createdAt
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: entity
    type: enum[SmokeLog,Prefs,Account,Tag,SmokeLogTag,Method,Reason,SmokeLogReason]
  - name: op
    type: enum[upsert,delete]
  - name: recordId
    type: string
  - name: payload
    type: json
  - name: status
    type: enum[queued,sending,ack,failed]
  - name: attempts
    type: int
  - name: lastError
    type: string?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: ImportBatch
  pk: id
  indexes:
  - name: byAccountCreated
    fields:
    - accountId
    - startedAt
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: source
    type: enum[csv,json,cloud]
  - name: fileName
    type: string?
  - name: countInserted
    type: int
  - name: countFailed
    type: int
  - name: startedAt
    type: datetime
  - name: finishedAt
    type: datetime?
  - name: log
    type: string?
- name: ChartView
  pk: id
  indexes:
  - name: byAccountUpdated
    fields:
    - accountId
    - updatedAt
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: title
    type: string
  - name: range
    type: enum[7d,30d,90d,1y,all,custom]
  - name: customStart
    type: date?
  - name: customEnd
    type: date?
  - name: groupBy
    type: enum[day,week,month]
  - name: metric
    type: enum[count,duration]
  - name: smoothing
    type: enum[none,ema,rolling]
  - name: smoothingWindow
    type: int?
  - name: visibleTags
    type: string[]?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: StatsDaily
  pk: id
  indexes:
  - name: byAccountDate
    fields:
    - accountId
    - date
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: date
    type: date
  - name: hitCount
    type: int
  - name: totalDurationMs
    type: int
  - name: avgDurationMs
    type: int
- name: Tag
  pk: id
  indexes:
  - name: byAccountName
    fields:
    - accountId
    - name
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: name
    type: string
  - name: color
    type: string?
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
- name: Reminder
  pk: id
  indexes:
  - name: byAccountTime
    fields:
    - accountId
    - time
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)
  - name: time
    type: time
  - name: days
    type: enum[mon,tue,wed,thu,fri,sat,sun][]
  - name: enabled
    type: bool
  - name: lastTriggeredAt
    type: datetime?
- name: Method
  pk: id
  indexes:
  - name: byAccountName
    fields:
    - accountId
    - name
  fields:
  - name: id
    type: string
  - name: accountId
    type: fk(Account.id)?
  - name: name
    type: string
  - name: category
    type: enum[combustion,vaporization,edible,other]
  - name: createdAt
    type: datetime
  - name: updatedAt
    type: datetime
perf_budgets:
  app:
    cold_start_p95_ms: 1200
    warm_start_p95_ms: 500
    home_first_paint_p95_ms: 700
    bundle_size_max_mb: 30
  device_profile: iPhone16ProMax
  charts:
    render_p95_ms: 200
    range_query_p95_ms: 120
  logging:
    save_latency_p95_ms: 80
    undo_latency_p95_ms: 60
  sync:
    retry_backoff_ms:
    - 1000
    - 5000
    - 15000
security:
  data_at_rest: os_keystore_protected
  data_in_transit: tls12_plus
  pii:
  - Account.displayName
  - Account.photoUrl
  export_redaction: none_by_default
features:
- id: ui.app_shell
  order: 1
  title: App Shell & Navigation Scaffold
  status: done
  priority: P0
  epic: ui
  rationale: Establish consistent structure for all screens and enable future features.
  acceptance:
  - Implements app root with Riverpod providers initialization and error boundary.
  - iPhone (incl. 16 Pro Max) uses bottom navigation bar with at least Home and Logs
    tabs (initial release scope); Charts & Settings accessible via overflow / future
    tabs.
  - "Side / rail navigation activates for width \u2265 840dp (tablet/desktop) showing\
    \ Home, Logs, Charts, Settings icons."
  - Navigation state (active tab + stack) persists across app restarts (last active
    primary tab preserved).
  - Deep links to primary tabs supported (home, logs) and future-ready for charts,
    settings.
  - "Tab bar safe-area aware; no overlap with iOS home indicator; minimum tap target\
    \ \u226548px."
  - Logs tab initially contains both log table and inline / toggleable chart view
    (chart segment behind feature flag until charts epic delivered).
  - Separate Charts tab disabled until insights.charts_time_series marked done; enabling
    it moves chart UI from Logs tab.
  - All interactive surfaces respect iOS safe areas including Dynamic Island / notch;
    no clipped snackbars, sheets, or toasts.
  - 'One-hand ergonomics validated: primary record action within comfortable thumb
    zone on iPhone 16 Pro Max portrait.'
  - iOS back-swipe gesture (edge pan) works on nested stacks without visual jank.
  - Baseline haptic events are invoked (delegated to ui.haptics_baseline for mapping).
  screens:
  - home
  - logs
  - charts
  - settings
  components:
  - app_shell
  - nav_bar
  - adaptive_layout
  offline:
    behavior: shell_renders_with_cached_theme_and_last_tab
- id: ui.routing
  order: 2
  title: Typed Routing & Deep Link Handling
  status: done
  priority: P0
  epic: ui
  acceptance:
  - Define central route map with typed params (e.g., log detail id).
  - Unknown routes redirect to safe default (home) with telemetry event.
  - Supports push and replace for modal vs full-screen flows.
  - Handles incoming deep link for /log/{id} opening detail view when available locally
    or after fetch.
  - Supports Universal Links / custom scheme (ashtrail://) for primary routes and
    log detail.
  - 'State restoration: deep link launched cold start restores target screen after
    providers initialize.'
  components:
  - router
  telemetry:
    events:
    - route_navigate
    - route_unknown
- id: ui.theming
  order: 3
  title: Theming System & Dark Mode
  status: done
  priority: P0
  epic: ui
  acceptance:
  - Light/dark themes implemented with semantic color/token set.
  - Theme reacts to system preference unless overridden (future customization feature
    flag gated).
  - Defaults to dark mode if system preference is not available.
  - High-contrast mode ready (placeholder tokens) without regressions.
  - Dynamic Type (system text scaling) supported up to 200%; Bold Text toggle does
    not clip core UI.
  - Increase Contrast / Differentiate Without Color iOS settings produce legible states
    (tokens prepared).
  components:
  - theme_provider
  offline:
    behavior: theme_persists_locally
- id: ui.responsive
  order: 4
  title: Responsive & Adaptive Layout
  status: done
  priority: P1
  epic: ui
  acceptance:
  - Phone (portrait & landscape) layouts optimized first; non-phone adaptations may
    slip if schedule risk.
  - "Dual-pane (table + detail preview) activates for width \u2265 840dp (iPad / desktop)\
    \ once desktop/iPad builds enabled (post-initial iPhone launch; not MVP blocking)."
  - Charts legend layout adapts (wrap vs side) when charts feature/tab is enabled
    and width breakpoint exceeded.
  - "Minimum tap targets enforced (\u226548px) via shared style."
  - Large Title collapsing header style used on primary list screens (iOS convention)
    when vertical scroll present.
  components:
  - adaptive_layout
  - breakpoint_builder
- id: ui.error_boundary
  order: 5
  title: Global Error Boundary & Retry Surface
  status: done
  priority: P1
  epic: ui
  acceptance:
  - Uncaught UI errors show fallback with Restart and Copy Logs (dev) actions.
  - Boundary logs sanitized error event (respects analyticsOptIn).
  - Unit tests cover error boundary capturing and reset logic.
  - Share diagnostics uses native iOS share sheet (redacted if analyticsOptIn=false).
  components:
  - error_boundary
- id: ui.loading_skeletons
  order: 6
  title: Skeleton & Shimmer States
  status: done
  priority: P2
  epic: ui
  acceptance:
  - "Home, logs table, and charts show skeletons for \u2265300ms pending loads."
  - Avoids layout shift >16px on content load.
  - 'Respects Reduce Motion: shimmer replaced by subtle fade when enabled.'
  components:
  - skeleton_list
  - skeleton_chart
- id: ui.accessibility_foundation
  order: 7
  title: Accessibility Foundation
  status: done
  priority: P2
  epic: ui
  acceptance:
  - Global text scale up to 200% without overflow on primary screens.
  - Focus order and traversal defined for keyboard / assistive tech.
  - Semantics labels on navigation items and record button.
  - VoiceOver rotor / actions labels present for log rows & record button.
  - "All interactive elements meet \u226544pt (iOS) hit area; audit documented."
  - Supports Bold Text, Increase Contrast, Reduce Motion without layout breakage.
  components:
  - semantics_wrappers
- id: ui.haptics_baseline
  order: 8
  title: Haptics Baseline
  status: done
  priority: P1
  epic: ui
  acceptance:
  - 'Central utility exposes semantic haptic events: tap, success, warning, error,
    impact_light.'
  - Logging capture uses press (impact_light) and release (success) patterns.
  - Haptics disabled automatically when Reduce Motion or system haptics disabled (if
    detectable) or via dev flag.
  - 'Unit test: utility no-op when disabled flag set.'
  components:
  - haptics_service
- id: ui.quick_actions
  order: 9
  title: Home Screen Quick Actions
  status: done
  priority: P1
  epic: ui
  acceptance:
  - 'Long-press app icon shows: Log Hit, View Logs, Start Timed Log (last optional
    behind flag).'
  - Each quick action deep links into routed screen or opens record overlay.
  - Telemetry event for each invocation.
  components:
  - quick_actions
- id: ui.home_widgets
  order: 10
  title: Home Screen Widgets (iOS)
  status: done
  priority: P2
  epic: ui
  acceptance:
  - Small & medium widgets show today hit count & streak (if available) with last
    sync timestamp.
  - Tapping widget deep links to record overlay or logs (configurable).
  - Widget respects dark/light & accent color tokens.
  components:
  - widget_extension
- id: ui.siri_shortcuts
  order: 11
  title: Siri Shortcuts
  status: done
  priority: P2
  epic: ui
  acceptance:
  - Donates intents for Add Log (immediate save with default method) and Start Timed
    Log after first in-app use.
  - Invoking shortcut records telemetry and routes user appropriately.
  components:
  - siri_intents
- id: ui.live_activity
  order: 12
  title: Live Activity (Recording)
  status: done
  priority: P3
  epic: ui
  acceptance:
  - While holding to record (extended mode) Live Activity shows elapsed duration &
    cancel option.
  - Ends cleanly on release or cancel; no orphaned activities.
  flags:
  - LIVE_ACTIVITY
  components:
  - live_activity
- id: ui.spotlight_indexing
  order: 13
  title: Spotlight Indexing
  status: done
  priority: P3
  epic: ui
  acceptance:
  - Recent tags and saved chart views indexed; selecting result deep links correctly.
  - Deindex removed / renamed items within one sync cycle.
  components:
  - spotlight_indexer
- id: ui.reachability
  order: 14
  title: Reachability & Ergonomics Audit
  status: planned
  priority: P1
  epic: ui
  acceptance:
  - Primary frequent actions remain in lower 60% vertical region portrait.
  - Audit document produced with thumb zone heatmap for baseline device.
  - Any action outside zone has alternate accessible trigger.
  artifacts:
  - reachability_audit
- id: logging.capture_hit
  order: 1
  title: Hold-to-Record Hit Duration
  status: planned
  priority: P0
  epic: logging
  rationale: Fast logging with minimal taps.
  user_stories:
  - As a user I press and hold to capture duration then release to save.
  - As a user I can add optional notes, method, mood, potency.
  acceptance:
  - Release creates SmokeLog with durationMs = hold_time.
  - Considers the time it takes to detect a long press and properly account for it
    in durationMs.
  - Snackbar offers Undo for 6 seconds.
  - Works offline with queued write.
  - Haptic cues on press start and release (light impact, success) via central haptics
    utility.
  - Record button placement validated for one-hand reach on baseline device.
  screens:
  - home
  - record_overlay
  components:
  - record_button
  - method_picker
  - mood_picker
  - snackbar_undo
  data:
    writes:
    - entity: SmokeLog
      fields:
        required:
        - id
        - accountId
        - ts
        - durationMs
        optional:
        - method
        - notes
        - mood
        - potency
    reads: []
  offline:
    write_policy: enqueue_then_write_remote
    conflict: last_write_wins_per_field
  telemetry:
    events:
    - log_created
    - log_undone
  a11y:
    labels:
    - Record hit. Hold to start, release to save.
    min_touch_target_px: 48
  errors:
  - code: E_RECORD_FAIL
    message: Failed to save. Tap to retry.
- id: logging.undo_last
  order: 2
  title: Undo Last Log
  status: done
  priority: P0
  epic: logging
  acceptance:
  - Undo deletes last created SmokeLog if pressed within timeout.
  - Undo is idempotent and safe offline.
  - Undo surface uses iOS-style bottom toast/snackbar, safe-area aware, VoiceOver
    announces action availability.
  components:
  - snackbar_undo
  data:
    writes:
    - entity: SmokeLog
      op: delete_by_id
  offline:
    write_policy: enqueue_then_write_remote
- id: logs.table_browse_edit
  order: 3
  title: Logs Table Browse + Edit
  status: done
  priority: P0
  epic: logging
  rationale: Review and correct logs quickly.
  user_stories:
  - As a user I view, sort, filter, edit, and delete logs.
  acceptance:
  - Sort by date, duration, method.
  - Filter by range, method, tags, mood.
  - Inline edit duration and notes with validation.
  - iOS swipe actions (Delete, Edit) on rows; long-press context menu supports quick
    tag add/remove.
  screens:
  - logs
  components:
  - log_table
  - filter_bar
  - pagination
  - edit_modal
  - delete_confirm
  data:
    reads:
    - entity: SmokeLog
      query: byAccountTs
    writes:
    - entity: SmokeLog
      op: update_fields
  offline:
    write_policy: enqueue_then_write_remote
- id: logging.quick_tagging
  order: 4
  title: Quick Tagging Chips
  status: done
  priority: P1
  epic: logging
  rationale: Reduce friction adding frequent tags to a log at capture time.
  user_stories:
  - As a user I tap one or more recent/frequent tags before pressing the hold button.
  acceptance:
  - Top 5 most recent or frequent tags appear as selectable chips above record button.
  - Ability to add from infrequent tags list.
  - Selected tags persisted via SmokeLogTag writes with same ts as SmokeLog.
  - Works offline and queues tag creates.
  components:
  - tag_suggestion_chips
  data:
    reads:
    - entity: Tag
      query: byAccountName
    writes:
    - entity: SmokeLogTag
      op: insert
  offline:
    write_policy: enqueue_then_write_remote
- id: logging.edit_inline_snackbar
  order: 5
  title: Inline Edit From Snackbar
  status: done
  priority: P2
  epic: logging
  rationale: Fix minor mistakes immediately after creation.
  acceptance:
  - Snackbar expands to allow duration +/- buttons and notes field within undo window.
  - Update cancels and replaces prior queued write if not yet synced.
  components:
  - snackbar_undo
  - inline_edit_controls
  data:
    writes:
    - entity: SmokeLog
      op: update_fields
  offline:
    write_policy: enqueue_then_write_remote
- id: logging.batch_edit_delete
  order: 6
  title: Batch Edit & Delete
  status: done
  priority: P2
  epic: logging
  acceptance:
  - Multi-select in table; apply tag add/remove or delete.
  - Confirms destructive operations.
  screens:
  - logs
  components:
  - selection_toolbar
  data:
    writes:
    - entity: SmokeLog
      op: delete_by_id
    - entity: SmokeLog
      op: update_fields
  offline:
    write_policy: enqueue_then_write_remote
- id: logs.detail_view
  order: 7
  title: Log Detail
  status: done
  priority: P2
  epic: logging
  acceptance:
  - Open from table to view full metadata and history.
  screens:
  - log_detail
  components:
  - detail_card
  - actions_row
- id: insights.charts_time_series
  order: 1
  title: 'Charts: Daily | Weekly | Monthly | Cumulative | Moving Avg'
  status: planned
  priority: P0
  epic: insights
  screens:
  - charts
  components:
  - time_range_picker
  - fl_chart_line
  - legend
  - empty_state
  - aggregation_toggle
  data:
    reads:
    - entity: SmokeLog
      query: byAccountTs_with_range
  perf_budget:
    chart_render_p95_ms: 200
  acceptance:
  - Aggregations switch without re-navigation.
  - Panning respects selected range and account.
  - "Baseline device pan/zoom maintains \u226555fps average (validated in dev perf\
    \ overlay)."
- id: insights.goal_progress
  order: 2
  title: Goal Progress Dashboard
  status: planned
  priority: P0
  epic: insights
  acceptance:
  - Active goals show progress bar and %.
  - Achieved goals move to Completed section with achievedAt date.
  components:
  - goal_card_list
  data:
    reads:
    - entity: Goal
      query: byAccountActive
- id: insights.custom_views
  order: 3
  title: Custom Saved Chart Views
  status: planned
  priority: P1
  epic: insights
  rationale: Persist user-defined chart configurations.
  acceptance:
  - Save current chart settings as named view (ChartView entity).
  - Edit & delete existing saved views.
  components:
  - save_view_button
  - saved_views_list
  data:
    reads:
    - entity: ChartView
      query: byAccountUpdated
    writes:
    - entity: ChartView
      op: upsert
    - entity: ChartView
      op: delete_by_id
  offline:
    write_policy: enqueue_then_write_remote
- id: insights.tag_breakdown
  order: 4
  title: Tag Breakdown (Pie / Bar)
  status: planned
  priority: P1
  epic: insights
  rationale: Understand distribution of usage by tag.
  acceptance:
  - Pie or bar toggles; shows % of hits and duration per tag for selected range.
  - Empty state when <2 tags.
  components:
  - fl_chart_pie
  - legend
  - empty_state
  data:
    reads:
    - entity: SmokeLogTag
      query: byAccountTagTs
- id: insights.streaks
  order: 5
  title: Streaks View
  status: planned
  priority: P1
  epic: insights
  rationale: Provide motivational streak metrics.
  acceptance:
  - Shows current streak of goal compliance and longest streak.
  - "Streak calculation cached in StatsDaily or computed with \u2264120ms query P95."
  data:
    reads:
    - entity: StatsDaily
- id: insights.filter_presets
  order: 6
  title: Filter Presets CRUD
  status: planned
  priority: P2
  epic: insights
  acceptance:
  - Create, apply, rename, delete presets.
  - Applying updates logs table and charts simultaneously.
  data:
    reads:
    - entity: FilterPreset
      query: byAccountUpdated
    writes:
    - entity: FilterPreset
      op: upsert
    - entity: FilterPreset
      op: delete_by_id
- id: accounts.multi_sign_in_switch
  order: 1
  title: Multi-Account Sign-In + Switch
  status: planned
  priority: P0
  epic: accounts
  rationale: Household and shared device support.
  user_stories:
  - As a user I can sign in multiple accounts and switch without reauth.
  - As a user I see which account is active on all screens.
  acceptance:
  - Active account pill visible and tappable.
  - Switching updates all queries and UI state.
  screens:
  - account_switcher
  - home
  - charts
  - logs
  components:
  - account_chip
  - account_menu
  data:
    reads:
    - entity: Account
    writes: []
  offline:
    behavior: switch_works_offline_with_cached_profiles
- id: accounts.offline_bootstrap
  order: 2
  title: Offline Bootstrap
  status: planned
  priority: P1
  epic: accounts
  acceptance:
  - Previously signed-in accounts restore session & cached data before network.
  - UI marks stale data until sync completes.
- id: accounts.sessions_persistence
  order: 3
  title: Persistent Sessions
  status: planned
  priority: P1
  epic: accounts
  acceptance:
  - Sessions survive app restarts and short network loss.
- id: accounts.identity_linking
  order: 4
  title: Link Additional Identity Providers
  status: planned
  priority: P2
  epic: accounts
  acceptance:
  - Link Google/email/device to existing account; prevent duplicates.
  - Unlink (except if last provider) with confirmation.
  data:
    reads:
    - entity: AuthIdentity
      query: byAccountProvider
    writes:
    - entity: AuthIdentity
      op: upsert
    - entity: AuthIdentity
      op: delete_by_id
- id: accounts.avatar_edit
  order: 5
  title: Account Avatar Edit
  status: planned
  priority: P3
  epic: accounts
  acceptance:
  - Change photoUrl via picker; optimistic preview.
  data:
    writes:
    - entity: Account
      op: update_fields
- id: sync.background_queue
  order: 1
  title: Background Sync Queue + Retry
  status: planned
  priority: P0
  epic: sync
  acceptance:
  - Exponential backoff retry until success.
  - Queue survives app restarts.
  triggers:
  - app_start
  - foreground
  - connectivity_gain
  telemetry:
    events:
    - sync_enqueued
    - sync_success
    - sync_failure
- id: sync.conflict_resolution
  order: 2
  title: Conflict Resolution
  status: planned
  priority: P1
  epic: sync
  policy: last_write_wins_per_field
  acceptance:
  - Conflicts resolved deterministically and logged.
- id: sync.delta_pull
  order: 3
  title: Delta Pull (Incremental Fetch)
  status: planned
  priority: P1
  epic: sync
  acceptance:
  - Uses lastPulledAt watermark; only changed records transferred.
  - Watermark updated atomically after successful merge.
  data:
    writes:
    - entity: SyncState
      op: update_fields
- id: sync.import_processing
  order: 4
  title: Import Batch Processing
  status: planned
  priority: P1
  epic: sync
  acceptance:
  - Large imports chunked and enqueued to sync queue efficiently.
  - Progress shown per ImportBatch.
  data:
    reads:
    - entity: ImportBatch
    writes:
    - entity: SyncOp
      op: upsert
- id: sync.backpressure
  order: 5
  title: Queue Backpressure & Throttling
  status: planned
  priority: P2
  epic: sync
  acceptance:
  - Queue size limit enforced; oldest failed entries pruned with user notice.
  - Adaptive retry backoff extends on systemic failures.
- id: sync.tombstone_gc
  order: 6
  title: Tombstone GC
  status: planned
  priority: P2
  epic: sync
  acceptance:
  - Deletes local tombstones older than retention watermark without breaking conflict
    resolution.
  data:
    reads:
    - entity: SyncState
    writes:
    - entity: SyncState
      op: update_fields
- id: data.schema_v1
  order: 1
  title: Data Schema v1
  status: planned
  priority: P0
  epic: data
  acceptance:
  - 'Entities defined: Account, SmokeLog, Prefs.'
  - Migrations from v0 handled safely.
  artifacts:
  - entities
- id: data.indexing_perf
  order: 2
  title: Indexing + Query Perf
  status: planned
  priority: P1
  epic: data
  acceptance:
  - "P95 range query \u2264 120 ms on 50k rows."
  - Pagination consistent and stable.
- id: data.migrations_framework
  order: 3
  title: Migrations Framework
  status: planned
  priority: P1
  epic: data
  acceptance:
  - Versioned migration scripts runnable idempotently.
  - Downgrade protection and checksum logging.
- id: data.daily_aggregates
  order: 4
  title: Daily Aggregates Generation
  status: planned
  priority: P1
  epic: data
  acceptance:
  - StatsDaily rows produced/updated on log create/update/delete within 2s.
  - Rebuild command regenerates from scratch.
  data:
    writes:
    - entity: StatsDaily
      op: upsert
- id: data.search_index
  order: 5
  title: Full-Text Search (Notes & Tags)
  status: planned
  priority: P2
  epic: data
  acceptance:
  - "Keyword search returns matching logs \u2264150ms P95 up to 50k logs."
  data:
    reads:
    - entity: SmokeLog
- id: data.compaction
  order: 6
  title: Local DB Compaction
  status: planned
  priority: P2
  epic: data
  acceptance:
  - "Scheduled compaction reduces file size by \u226515% after heavy churn."
- id: settings.account_options
  order: 1
  title: Account Options
  status: planned
  priority: P0
  epic: settings
  rationale: Manage signed-in identities, sessions and account lifecycle.
  user_stories:
  - As a user I can view signed-in accounts and add another.
  - As a user I can sign out of individual accounts or all accounts.
  - As a user I can change password (for email provider) or delete my account.
  acceptance:
  - Account list shows active sessions and provider type.
  - Add-account flows co-exist with multi-sign-in feature.
  - Change password flow exists for email-based accounts and requires reauth.
  - Delete account triggers confirmation and backups/export prompt.
  - Destructive actions (delete account, sign out all) use native iOS action sheet
    / bottom sheet pattern.
  screens:
  - settings
  - account_switcher
  components:
  - account_list
  - add_account_button
  - sign_out_button
  - delete_account_confirm
  data:
    reads:
    - entity: Account
    - entity: Session
    writes:
    - entity: Session
      op: update_fields
    - entity: Account
      op: delete_by_id
  offline:
    behavior: allow_local_sign_out; remote ops queued
- id: settings.goals_crud
  order: 2
  title: Goals Management
  status: planned
  priority: P0
  epic: settings
  acceptance:
  - Create/edit/activate/deactivate goals; validation against overlapping active goals
    of same type.
  data:
    reads:
    - entity: Goal
      query: byAccountActive
    writes:
    - entity: Goal
      op: upsert
    - entity: Goal
      op: update_fields
- id: settings.personal_info
  order: 3
  title: Personal Information (Profile)
  status: planned
  priority: P1
  epic: settings
  rationale: View and edit personal profile fields used for account and export flows.
  user_stories:
  - As a user I can view and edit my first name, last name, and email.
  - As a user changing my email prompts validation (verify or reauth) before persisting.
  acceptance:
  - Profile screen shows firstName, lastName, email and photoUrl.
  - Email change triggers validation flow (send verification or require credential
    reauth depending on provider).
  screens:
  - settings
  components:
  - profile_form
  - email_validation_modal
  data:
    reads:
    - entity: Account
    writes:
    - entity: Account
      op: update_fields
  offline:
    write_policy: enqueue_then_write_remote
- id: settings.my_data
  order: 4
  title: My Data (Stats & Management)
  status: planned
  priority: P1
  epic: settings
  rationale: Give users transparency and controls over their personal data.
  user_stories:
  - As a user I can view high-level stats about my logs (totals and averages).
  - As a user I can trigger a full data sync, export my data, or delete all local
    data.
  acceptance:
  - 'Stats displayed: totalLogs, firstLogTs, totalDurationMs, avgDurationByHour/day/month/year.'
  - Export action prepares a file and can email it to the user's address or open platform
    share.
  - Full data sync enqueues a sync op and reports result to user.
  - Delete all data clears local storage and optionally requests remote deletion when
    account-scoped.
  screens:
  - settings
  components:
  - data_stats_card
  - data_actions_row
  - export_flow
  - delete_confirm
  data:
    reads:
    - entity: StatsDaily
    - entity: SmokeLog
    writes:
    - entity: SyncOp
    - entity: ImportBatch
  offline:
    write_policy: enqueue_then_write_remote
- id: settings.rules_engine
  order: 5
  title: Rules Engine Management
  status: planned
  priority: P1
  epic: settings
  acceptance:
  - Build conditional rules (e.g., if hits > X in Y hours -> notify).
  - JSON condition validated before save.
  data:
    reads:
    - entity: Rule
      query: byAccountEnabled
    writes:
    - entity: Rule
      op: upsert
    - entity: Rule
      op: update_fields
- id: settings.onboarding_flow
  order: 6
  title: Onboarding Flow
  status: planned
  priority: P1
  epic: settings
  acceptance:
  - Track stepsCompleted; surfaces progress and hides completed steps.
  data:
    reads:
    - entity: Onboarding
    writes:
    - entity: Onboarding
      op: upsert
- id: settings.preferences
  order: 7
  title: Preferences and Units
  status: planned
  priority: P2
  epic: settings
  acceptance:
  - Switch ms/s units across UI.
  - Default chart range per account.
- id: settings.privacy
  order: 8
  title: Privacy Controls
  status: planned
  priority: P2
  epic: settings
  acceptance:
  - Analytics opt-in with clear copy.
  - Local data clear action.
- id: settings.customization
  order: 9
  title: Customization
  status: planned
  priority: P2
  epic: settings
  rationale: Let users tailor appearance and theme behavior.
  acceptance:
  - Toggle follow_system_theme (on/off).
  - Select accent color from a small palette and persist per-account.
  - Theme changes apply instantly across app.
  screens:
  - settings
  components:
  - theme_toggle
  - accent_picker
  data:
    reads:
    - entity: Prefs
    writes:
    - entity: Prefs
      op: update_fields
- id: settings.filter_defaults
  order: 10
  title: Default Filter Preferences
  status: planned
  priority: P2
  epic: settings
  acceptance:
  - User sets default range & sort applied to logs/charts on open.
  data:
    reads:
    - entity: Prefs
    writes:
    - entity: Prefs
      op: update_fields
- id: settings.backup_restore_local
  order: 11
  title: Local Backup & Restore
  status: planned
  priority: P2
  epic: settings
  acceptance:
  - Export encrypted local DB snapshot; restore prompts overwrite confirmation.
  components:
  - backup_button
  - restore_button
- id: settings.about
  order: 12
  title: About
  status: planned
  priority: P2
  epic: settings
  acceptance:
  - Show app name, version, copyright, license and link to privacy policy.
  - License view displays bundled LICENSE file content.
  screens:
  - settings
  components:
  - about_card
  - license_modal
- id: notifications.reminders
  order: 1
  title: Reminders
  status: parked
  priority: P2
  epic: notifications
  acceptance:
  - Schedule daily or custom times to log.
- id: notifications.rule_based
  order: 2
  title: Rule-Based Notifications
  status: planned
  priority: P1
  epic: notifications
  acceptance:
  - Rules with action=notify enqueue local notification.
  - "Debounced to avoid spam (\u226515 min between identical rule triggers)."
  data:
    reads:
    - entity: RuleTrigger
      query: byRuleTime
    writes:
    - entity: RuleTrigger
      op: insert
- id: notifications.goal_milestone
  order: 3
  title: Goal Milestone Notifications
  status: planned
  priority: P2
  epic: notifications
  acceptance:
  - Notify when goal progress crosses 25/50/75/100% thresholds (single notification
    per threshold per goal).
- id: notifications.streak_warning
  order: 4
  title: Streak Break Warning
  status: planned
  priority: P3
  epic: notifications
  acceptance:
  - Warn user X hours before streak would break (configurable X, default 12h).
- id: notifications.daily_summary
  order: 5
  title: Daily Summary Digest
  status: planned
  priority: P3
  epic: notifications
  acceptance:
  - Summary of previous day hits & goal progress at chosen morning time.
- id: export.csv_json
  order: 1
  title: Export CSV/JSON
  status: planned
  priority: P1
  epic: export
  acceptance:
  - Share CSV or JSON for selected range and account.
  - Valid headers and RFC3339 timestamps.
- id: export.import_csv_json
  order: 2
  title: Import CSV/JSON
  status: planned
  priority: P1
  epic: export
  acceptance:
  - Parse file into ImportBatch + ImportItem records; show summary and errors.
  data:
    writes:
    - entity: ImportBatch
      op: insert
    - entity: ImportItem
      op: insert
- id: export.chart_image_share
  order: 3
  title: Share Chart Image
  status: planned
  priority: P2
  epic: export
  acceptance:
  - Export current chart as PNG with legend and range metadata.
- id: export.redaction_options
  order: 4
  title: Redaction Options
  status: planned
  priority: P2
  epic: export
  acceptance:
  - Toggle inclusion of notes, tags, mood scores in export.
- id: export.auto_scheduled
  order: 5
  title: Scheduled Auto Export
  status: planned
  priority: P3
  epic: export
  acceptance:
  - Weekly export emailed or saved to device when enabled.
- id: quality.telemetry
  order: 1
  title: Telemetry Events
  status: planned
  priority: P1
  epic: quality
  events:
  - app_open
  - account_switch
  - chart_view
  - filter_apply
  - export_started
  - export_completed
- id: quality.error_handling
  order: 2
  title: Error Handling + Retry UI
  status: planned
  priority: P1
  epic: quality
  acceptance:
  - Inline error states with retry.
  - Centralized error codes.
- id: quality.a11y_baseline
  order: 3
  title: Accessibility Baseline
  status: planned
  priority: P1
  epic: quality
  acceptance:
  - "All touch targets \u2265 48 px."
  - Labels on interactive elements.
  - Screen reader order logical.
- id: quality.logging_sanitization
  order: 4
  title: Log Sanitization
  status: planned
  priority: P1
  epic: quality
  acceptance:
  - PII fields excluded from telemetry events unless analyticsOptIn true.
- id: quality.crash_reporting
  order: 5
  title: Opt-In Crash Reporting
  status: planned
  priority: P2
  epic: quality
  acceptance:
  - Crashes captured only if analyticsOptIn and redacted.
- id: quality.perf_overlay
  order: 6
  title: In-App Performance Overlay
  status: planned
  priority: P2
  epic: quality
  acceptance:
  - Overlay shows frame time, memory, query latency sampling (dev-only flag).
- id: quality.offline_diagnostics
  order: 7
  title: Offline Diagnostics Panel
  status: planned
  priority: P2
  epic: quality
  acceptance:
  - Panel lists queued ops, last sync timestamps, and retry schedule.
- id: quality.test_coverage
  order: 8
  title: Test Coverage Threshold
  status: planned
  priority: P3
  epic: quality
  acceptance:
  - "Enforce \u226570% line coverage on CI for core logging & sync modules."
- id: devtools.feature_flags
  order: 1
  title: Feature Flags
  status: planned
  priority: P1
  epic: devtools
  acceptance:
  - Per-feature flags gate new UI safely.
  - Flags readable at runtime.
- id: devtools.flags_remote
  order: 2
  title: Remote Flag Fetch
  status: planned
  priority: P2
  epic: devtools
  acceptance:
  - Flags refresh interval configurable (default 15m) with manual refresh.
- id: devtools.demo_mode
  order: 3
  title: Demo Mode with Static Users
  status: planned
  priority: P1
  epic: devtools
  rationale: Development and presentations.
  acceptance:
  - "Toggle to preload 2\u20133 demo accounts and sample logs."
  - Isolated from production data.
  flags:
  - DEMO_MODE
- id: devtools.local_data_browser
  order: 4
  title: Local Data Browser
  status: planned
  priority: P1
  epic: devtools
  acceptance:
  - Inspect entities, run simple queries, copy JSON (dev-only).
- id: devtools.log_console
  order: 5
  title: In-App Log Console
  status: planned
  priority: P1
  epic: devtools
  acceptance:
  - Stream filtered logs (info/warn/error) with export to file.
- id: devtools.time_travel
  order: 6
  title: Time Travel (Mock Clock)
  status: planned
  priority: P3
  epic: devtools
  acceptance:
  - Override app clock for testing charts, streaks, reminders.
open_questions:
- How strict should dedupe be for rapid hold-release logs? Use deviceLocalId+ts?
- Do we support cross-account aggregated charts or keep account-scoped?
- Export: include tags and mood by default or behind toggle?
- Minimum supported offline duration before queue purged?
risks:
- Large datasets may degrade client-side aggregation. Mitigate with pre-agg or windowing.
- Multi-account confusion in UI. Mitigate with persistent active account chip and
  color accent.
dependencies:
- charts_time_series depends_on:
  - data.indexing_perf
  - data.schema_v1
- export.csv_json depends_on:
  - logs.table_browse_edit
  - data.indexing_perf
- sync.background_queue depends_on:
  - data.schema_v1
owners:
- logging: backend_team
- insights: app_team
- sync: platform_team
- data: platform_team
notes:
- All timestamps use UTC ISO-8601 with timezone offset when displayed.
- Range presets: 7d, 30d, 90d, 1y, all.
